//////////////////////////////////////////////////////////////////////////////////////////
// VersInfoEx.cpp  --  Implementation of the DLL's exports
//////////////////////////////////////////////////////////////////////////////////////////
//
//   Copyright (C) Software Development Laboratories, aka "Fish" (David B. Trout)
//
//   Licensed under terms of the ZLIB/LIBPNG Open Source Software License
//   http://www.opensource.org/licenses/zlib-license.php
//
//   THIS SOFTWARE IS PROVIDED 'AS-IS', WITHOUT ANY EXPRESS OR IMPLIED WARRANTY.
//   IN NO EVENT WILL THE AUTHOR(S) BE HELD LIABLE FOR ANY DAMAGES ARISING FROM
//   THE USE OF THIS SOFTWARE.
//
//   Permission is granted to anyone to use this software for any purpose, including
//   commercial applications, and to alter it and redistribute it freely, subject to
//   the following restrictions:
//
//    1. The origin of this software must not be misrepresented; you must not claim
//       that you wrote the original software. If you use this software in a product,
//       an acknowledgment in the product documentation would be appreciated but is
//       not required.
//
//    2. Altered source versions must be plainly marked as such, and must not be
//       misrepresented as being the original software.
//
//    3. Neither this notice nor the above Copyright information may be removed
//       or altered from any source distribution.
//
//////////////////////////////////////////////////////////////////////////////////////////
//
//  Change History:
//
//  10/13/10    1.0.0   Fish    Created.
//
//////////////////////////////////////////////////////////////////////////////////////////

#include "stdafx.h"                 // (system-wide precompiled headers)
#include "VersInfoEx.h"             // (auto-generated by MIDL compiler)
#include "VersInfoEx_i.c"           // (auto-generated by MIDL compiler)
#include "VersInfoExShlExt.h"       // (Shell Extension implementation)

$MODULEID;      // (embed module-id timestamp and copyright string into object code)

//////////////////////////////////////////////////////////////////////////////////////////
// The one and only VersInfoEx Shell Extension DLL object...

CComModule  _Module;    // (this one object does it all; it's the entire application)

//////////////////////////////////////////////////////////////////////////////////////////
// COM Object Map...

BEGIN_OBJECT_MAP( ObjectMap )

    OBJECT_ENTRY( CLSID_VersInfoShlExt, CVersInfoShlExt )

END_OBJECT_MAP()

//////////////////////////////////////////////////////////////////////////////////////////
// Returns a class factory to create an object of the requested type

STDAPI DllGetClassObject( REFCLSID rclsid, REFIID riid, LPVOID* ppv )
{
    return _Module.GetClassObject( rclsid,        riid,         ppv );
}

//////////////////////////////////////////////////////////////////////////////////////////
// Used to determine whether the DLL can be unloaded

STDAPI DllCanUnloadNow()
{
    return _Module.GetLockCount() ? S_FALSE : S_OK;
}

//////////////////////////////////////////////////////////////////////////////////////////
// Adds entries to the system registry

STDAPI DllRegisterServer()
{
    CRegKey  reg;
    LONG     lRet;

    lRet = reg.Open ( HKEY_LOCAL_MACHINE,
                      _T("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved"),
                      KEY_SET_VALUE );

    if ( ERROR_SUCCESS != lRet )
        return E_ACCESSDENIED;

    lRet = reg.SetStringValue ( _T("VersInfoEx Shell Extension"), VERSINFOEX_CLASS_UUID_REGFMT );

    if ( ERROR_SUCCESS != lRet )
        return E_ACCESSDENIED;

    // registers object, typelib and all interfaces in typelib

    return _Module.RegisterServer( false );
}

//////////////////////////////////////////////////////////////////////////////////////////
// Removes entries from the system registry

STDAPI DllUnregisterServer()
{
    CRegKey  reg;
    LONG     lRet;

    lRet = reg.Open ( HKEY_LOCAL_MACHINE,
                      _T("SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Shell Extensions\\Approved"),
                      KEY_SET_VALUE );

    if ( ERROR_SUCCESS == lRet )
    {
        reg.DeleteValue ( VERSINFOEX_CLASS_UUID_REGFMT );
        reg.Close();
    }

    return _Module.UnregisterServer( false );
}

//////////////////////////////////////////////////////////////////////////////////////////
// Main DLL entry-point

extern "C"
BOOL WINAPI DllMain( HINSTANCE hInstance, DWORD dwReason, LPVOID /*lpReserved*/ )
{
    if (DLL_PROCESS_ATTACH == dwReason)
    {
        _Module.Init( ObjectMap, hInstance, &LIBID_VersInfoExLib );
        DisableThreadLibraryCalls( hInstance );
    }
    else if (DLL_PROCESS_DETACH == dwReason)
        _Module.Term();

    return TRUE;
}

//////////////////////////////////////////////////////////////////////////////////////////
